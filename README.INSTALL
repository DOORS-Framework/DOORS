Quick INSTALL-HOWTO
-------------------

Foreword
========

Installing DOORS is a relatively easy task, especially for those 
familiar with the GNU "configure -> make -> make install" style 
installation. 


The Beginner Method
===================

Go to the top level DOORS directory. Type "./configure" and follow the 
instructions from that point on. 


The Advanced Method
===================

Go to the top level DOORS directory, and type "./configure -h" as well 
as "./configure --help". The "-h" option would give you flags that are 
specific to the DOORS installation process, while "--help" would give 
you flags that are specific to the GNU configure system.

An example:

./configure -d /home/bob/doors-sunccbuild -suncc --disable-shared 
--enable-debug --prefix=/opt/local/doors/ -make -install

would be interpreted as follows:

Run the top level configure to build object and binaries in 
"/home/bob/doors-sunccbuild/" with the Sun C++ compiler. Disable 
shared library building but enable debug information, with the 
installation directory prefix being "/opt/local/doors/". Then 
automatically go into the build directory and execute the "make" and 
"make install".

Prerequisites
=============

Minimum requisites are a working ANSI C++ compiler (usually at least a 
modern GNU C++ compiler) with a reasonably good STL library, and a make 
system. DOORS has been tested across Solaris, Linux, FreeBSD and OpenBSD. 
Mac OS X needs a little more work with shared library support from 
libtool, but should build successfully when the --disable-shared option 
is passed to the "configure" script. 


Developer Notes
===============

In case you're wondering, yes, the top-level "configure" script is 
hand-written to include DOORS-specific options and create a 
build environment. Then it automatically invokes the autogenerated 
"src/configure" GNU script. You really should not invoke src/configure by 
yourself from the command-line. BadThings[tm] might happen, and usually 
do. So always use the top-level configure script.

We use the following to build the configure and all the Makefile.in scripts 
found at and below src/:

GNU Autoconf 2.57
GNU libtool 1.5 
GNU Automake 1.7.5

Primary development platforms are:

Solaris 8 & 9: Sun WorkShop 6 update 2 C++ 5.3 Patch 111685-07

Debian GNU/Linux, FreeBSD and OpenBSD: gcc 3.2.3, gcc.3.2.2, gcc 2.95.2 (in 
various combinations)

Mac OS X v10.2.6: Apple Computer, Inc. GCC version 1175, based on gcc 
version 3.1 20020420 (prerelease) (This port is sadly being hampered by a 
libtool sharedlib bug).

In Solaris, we use GNU gmake version 3.77. The native Solaris "make" should 
in theory work too, since the generated Makefiles are supposed to be 
portable for both, but even so, we've encountered portability problems. 

If you've got anything to say or report, feel free to email me at 
bilhanan@cs.tut.fi


--------



